(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{287:function(r,a,t){"use strict";t.r(a);var s=t(14),e=Object(s.a)({},(function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[r._v("#")]),r._v(" JavaScript")]),r._v(" "),a("h2",{attrs:{id:"数组方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组方法"}},[r._v("#")]),r._v(" 数组方法")]),r._v(" "),a("h3",{attrs:{id:"静态方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态方法"}},[r._v("#")]),r._v(" 静态方法")]),r._v(" "),a("p",[r._v("Array.of()   用参数中的值创建数组\nArray.of(1,2,3,4)   得到的  [1,2,3,4]\nArray.from(object, mapFunction, thisValue)  将类数组对象转成数组\nArray.from({length:5},(_,index)=>index))\t[0, 1, 2, 3, 4]\nArray.isArray()\t判断是否是一个对象")]),r._v(" "),a("h3",{attrs:{id:"迭代器方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#迭代器方法"}},[r._v("#")]),r._v(" 迭代器方法")]),r._v(" "),a("p",[r._v("arr.forEach((item,index)=>{console.log(item,index)})\narr.map()   映射返回一个新数组\narr.filter()   过滤器，返回符合条件的数组\narr.find()  返回元素\narr.findIndex() 返回特定数组元素的下标\narr.every()\t  数组所有元素都满足条件则返回true（惰性）\narr.some()\t数组存在一个元素满足条件（惰性）\narr.reduce()  归并方法\narr.reduce((pre,cur)=>pre+cur,0)   pre代表上一次结果，  cur表示当前数组元素，0代表初始结果。")]),r._v(" "),a("h3",{attrs:{id:"打平方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打平方法"}},[r._v("#")]),r._v(" 打平方法")]),r._v(" "),a("p",[r._v("arr.flat()\t打平数组，arr.flat(num)， num代表打平层数\narr.flatMap()  先映射数组再进行打平， arr.flatMap(callback)=a.map(f).flat()，[-2,-1,1,2].flatMap(x=>x<0?[]:Math.sqrt(x))")]),r._v(" "),a("h3",{attrs:{id:"连接数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连接数组"}},[r._v("#")]),r._v(" 连接数组")]),r._v(" "),a("p",[r._v("a.concat(b)\t\t连接   [1,2].concat(4,5)    [1, 2, 4, 5]")]),r._v(" "),a("h3",{attrs:{id:"栈-队列操作数组-改变原数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈-队列操作数组-改变原数组"}},[r._v("#")]),r._v(" 栈，队列操作数组（改变原数组）")]),r._v(" "),a("p",[r._v("arr.push()  加最后一个元素\narr.pop()  移除最后一个元素\narr.shift()\t移除第一个元素\narr.unshift()\t加第一个元素")]),r._v(" "),a("h3",{attrs:{id:"处理区域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#处理区域"}},[r._v("#")]),r._v(" 处理区域")]),r._v(" "),a("p",[r._v("arr.slice(start,end)    取出[start,end)元素\narr.splice(start,num,insertA,insertB)  从start位置开始，删除num个元素，在插入insertA，insertB。\na.fill(ele,start,end)    用元素ele去填充[start,end)区域的值")]),r._v(" "),a("h3",{attrs:{id:"数组索引和排序方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组索引和排序方法"}},[r._v("#")]),r._v(" 数组索引和排序方法")]),r._v(" "),a("p",[r._v("arr.indexOf(a)\t\t元素在数组当中的索引（从前往后数）\narr.lastIndexOf(a)\t  元素在数组当中的索引 （从后往前数）\narr.includes(a)\t\t 数组内是否存在当前元素\narr.sort()\t\t\t数组排序（改变原数组） arr.sort((a,b)=>a-b)  从小到大排序\narr.reverse()\t\t翻转数组（改变原数组）\narr.join()\t\t\t将数组转换成字符串（默认以 , 进行分隔）")]),r._v(" "),a("p",[r._v("改变原数组的方法")]),r._v(" "),a("ul",[a("li",[r._v("push()")]),r._v(" "),a("li",[r._v("pop()")]),r._v(" "),a("li",[r._v("shift()")]),r._v(" "),a("li",[r._v("unshift()")]),r._v(" "),a("li",[r._v("splice()")]),r._v(" "),a("li",[r._v("sort()")]),r._v(" "),a("li",[r._v("reverse()")])])])}),[],!1,null,null,null);a.default=e.exports}}]);